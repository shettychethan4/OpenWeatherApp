plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.sample.openweathermap"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        /** Replace with your api_token which you get from https://openweathermap.org/
         * For eg: Your api token is 46hssat257ai80ntx83nh4acd
         * Following line should be replaced by following, including Backslash
         * buildConfigField 'String', 'API_DEVELOPER_TOKEN', "\"46hssat257ai80ntx83nh4acd\""*/

        buildConfigField 'String', 'API_KEY', "\"ebb2b81f3128504d3988dfffa06a75ae\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.cardview:cardview:1.0.0'


    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:$google_truth"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_test"
    testImplementation "androidx.room:room-testing:$room_test"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "com.google.truth:truth:$google_truth"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "androidx.arch.core:core-testing:$core_test"
    androidTestImplementation "androidx.test:rules:$android_test"
    androidTestImplementation "androidx.test:runner:$android_test"
    androidTestImplementation "androidx.test:core-ktx:$android_test"


    implementation "com.google.android.gms:play-services-location:$play_services_location"


    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentVersion"


    // Easy Permissions
    implementation "pub.devrel:easypermissions:$rootProject.easy_permission"

    // Networking
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp"

    //Room
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"

    //Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.hilt_version"
    implementation "androidx.hilt:hilt-work:$hilt_work_version"
    kapt "com.google.dagger:hilt-compiler:$rootProject.hilt_version"


    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hilt_version"


}